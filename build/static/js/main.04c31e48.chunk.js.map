{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/comments/Comments.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","length","onClick","MainNavigation","header","logo","nav","navData","isActive","active","to","Layout","main","children","QuoteItem","author","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","pathname","list","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","NewQuote","React","lazy","QuoteDetail","NotFound","App","fallback","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.04c31e48.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://movies-f251b-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__7eW_7\",\"logo\":\"MainNavigation_logo__r55Tz\",\"nav\":\"MainNavigation_nav__123Mb\",\"active\":\"MainNavigation_active__3bXQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1WtiY\",\"loading\":\"NewCommentForm_loading__2D0CW\",\"control\":\"NewCommentForm_control__s5_-D\",\"actions\":\"NewCommentForm_actions__19AiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3Y7MT\",\"sorting\":\"QuoteList_sorting__gdjk9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__78mBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__Afn3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1Luth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2bInR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1bi5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__nGsbV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2Vsai\"};","import { useEffect, useRef } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n   const commentTextRef = useRef();\n\n   const { sendRequest, status, error } = useHttp(addComment);\n\n   const { onAddedComment } = props;\n\n   useEffect(() => {\n      if (status === 'completed' && !error) {\n         onAddedComment();\n      }\n   }, [status, error, onAddedComment]);\n\n   const submitFormHandler = (event) => {\n      event.preventDefault();\n\n      // optional: Could validate here\n\n      // send comment to server\n      const enteredText = commentTextRef.current.value;\n      sendRequest({\n         commentData: { text: enteredText },\n         quoteId: props.quoteId,\n      });\n   };\n\n   return (\n      <form className={classes.form} onSubmit={submitFormHandler}>\n         {status === 'pending' && (\n            <div className=\"centered\">\n               <LoadingSpinner />\n            </div>\n         )}\n         <div className={classes.control} onSubmit={submitFormHandler}>\n            <label htmlFor=\"comment\">Your Comment</label>\n            <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n         </div>\n         <div className={classes.actions}>\n            <button className=\"btn\">Add Comment</button>\n         </div>\n      </form>\n   );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n   const [isAddingComment, setIsAddingComment] = useState(false);\n   const params = useParams();\n   const { quoteId } = params;\n\n   const {\n      sendRequest,\n      status,\n      data: loadedComments,\n   } = useHttp(getAllComments);\n\n   useEffect(() => {\n      sendRequest(quoteId);\n   }, [sendRequest, quoteId]);\n\n   const startAddCommentHandler = () => {\n      setIsAddingComment(true);\n   };\n\n   const addedCommentHandler = useCallback(() => {\n      sendRequest(quoteId);\n   }, [sendRequest, quoteId]);\n\n   let comments;\n\n   if (status === 'pending') {\n      comments = (\n         <div className=\"centered\">\n            <LoadingSpinner />\n         </div>\n      );\n   }\n\n   if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n      comments = <CommentsList comments={loadedComments} />;\n   }\n\n   if (\n      status === 'completed' &&\n      (!loadedComments || loadedComments.length === 0)\n   ) {\n      comments = <p className=\"centered\">No comments were added yet!</p>;\n   }\n\n   return (\n      <section className={classes.comments}>\n         <h2>User Comments</h2>\n         {!isAddingComment && (\n            <button className=\"btn\" onClick={startAddCommentHandler}>\n               Add a Comment\n            </button>\n         )}\n         {isAddingComment && (\n            <NewCommentForm\n               quoteId={quoteId}\n               onAddedComment={addedCommentHandler}\n            />\n         )}\n         {comments}\n      </section>\n   );\n};\n\nexport default Comments;\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n   return (\r\n      <header className={classes.header}>\r\n         <div className={classes.logo}>Great Quotes</div>\r\n         <nav className={classes.nav}>\r\n            <ul>\r\n               <li>\r\n                  <NavLink\r\n                     className={(navData) =>\r\n                        navData.isActive ? classes.active : ''\r\n                     }\r\n                     to=\"/quotes\"\r\n                  >\r\n                     All Quotes\r\n                  </NavLink>\r\n               </li>\r\n               <li>\r\n                  <NavLink\r\n                     className={(navData) =>\r\n                        navData.isActive ? classes.active : ''\r\n                     }\r\n                     to=\"/new-quote\"\r\n                  >\r\n                     Add a Quote\r\n                  </NavLink>\r\n               </li>\r\n            </ul>\r\n         </nav>\r\n      </header>\r\n   );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\n   return (\r\n      <Fragment>\r\n         <MainNavigation />\r\n         <main className={classes.main}>{props.children}</main>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default Layout;\r\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n   return (\n      <li className={classes.item}>\n         <figure>\n            <blockquote>\n               <p>{props.text}</p>\n            </blockquote>\n            <figcaption>{props.author}</figcaption>\n         </figure>\n         <Link to={`/quotes/${props.id}`} className=\"btn\">\n            View Fullscreen\n         </Link>\n      </li>\n   );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n   return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n         return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n         return quoteA.id < quoteB.id ? 1 : -1;\n      }\n   });\n};\n\nconst QuoteList = (props) => {\n   const navigate = useNavigate();\n   const location = useLocation();\n\n   const queryParams = new URLSearchParams(location.search);\n\n   const isSortingAscending = queryParams.get('sort') === 'asc';\n\n   const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n   const changeSortingHandler = () => {\n      navigate({\n         pathname: location.pathname,\n         search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n      });\n   };\n\n   return (\n      <Fragment>\n         <div className={classes.sorting}>\n            <button onClick={changeSortingHandler}>\n               Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n            </button>\n         </div>\n         <ul className={classes.list}>\n            {sortedQuotes.map((quote) => (\n               <QuoteItem\n                  key={quote.id}\n                  id={quote.id}\n                  author={quote.author}\n                  text={quote.text}\n               />\n            ))}\n         </ul>\n      </Fragment>\n   );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n   return (\n      <div className={classes.noquotes}>\n         <p>No quotes found!</p>\n         <Link to='/new-quote' className=\"btn\">Add a Quote</Link>\n      </div>\n   );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n   const {\r\n      sendRequest,\r\n      status,\r\n      data: loadedQuotes,\r\n      error,\r\n   } = useHttp(getAllQuotes, true);\r\n\r\n   useEffect(() => {\r\n      sendRequest();\r\n   }, [sendRequest]);\r\n\r\n   if (status === 'pending') {\r\n      return (\r\n         <div className=\"centered\">\r\n            <LoadingSpinner />\r\n         </div>\r\n      );\r\n   }\r\n\r\n   if (error) {\r\n      return <p className=\"centered focused\">{error}</p>;\r\n   }\r\n\r\n   if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n      return <NoQuotesFound />;\r\n   }\r\n\r\n   return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import React, { Suspense } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Comments from './components/comments/Comments';\nimport Layout from './components/layout/Layout';\nimport LoadingSpinner from './components/UI/LoadingSpinner';\nimport AllQuotes from './pages/AllQuotes';\n\n// import NotFound from './pages/NotFound';\n// import QuoteDetail from './pages/QuoteDetail';\n// import NewQuote from './pages/NewQuote';\nconst NewQuote = React.lazy(() => import('./pages/NewQuote'));\nconst QuoteDetail = React.lazy(() => import('./pages/QuoteDetail'));\nconst NotFound = React.lazy(() => import('./pages/NotFound'));\n\nfunction App() {\n   return (\n      <Layout>\n         <Suspense\n            fallback={\n               <div className=\"centered\">\n                  <LoadingSpinner />\n               </div>\n            }\n         >\n            <Routes>\n               <Route path=\"/\" element={<Navigate to=\"/quotes\" />} />\n               <Route path=\"/quotes\" element={<AllQuotes />} />\n               <Route path=\"/quotes/:quoteId/*\" element={<QuoteDetail />}>\n                  <Route path=\"comments\" element={<Comments />} />\n               </Route>\n               <Route path=\"/new-quote\" element={<NewQuote />} />\n               <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n         </Suspense>\n      </Layout>\n   );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n   <BrowserRouter>\n      <App />\n   </BrowserRouter>\n);\n"],"sourceRoot":""}