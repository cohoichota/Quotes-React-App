{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","quoteId","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","id","to"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,wFCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,sBCmDVC,UAlDK,WACjB,IACQC,EADOC,cACPD,QAER,EAKIE,YAAQC,KAAgB,GAJzBC,EADH,EACGA,YACAC,EAFH,EAEGA,OACMC,EAHT,EAGGC,KACAC,EAJH,EAIGA,MASH,OANAC,qBAAU,WACPL,EAAYJ,KACZ,CAACI,EAAaJ,IAIF,YAAXK,EAEE,qBAAKX,UAAU,WAAf,SACG,cAACgB,EAAA,EAAD,MAKLF,EACM,mBAAGd,UAAU,mBAAb,SAAiCc,IAGtCF,EAAYT,KAKd,eAAC,WAAD,WACG,cAAC,EAAD,CACGD,MAAOU,EAAYK,GACnBd,KAAMS,EAAYT,KAClBC,OAAQQ,EAAYR,SAEvB,qBAAKJ,UAAU,WAAf,SACG,cAAC,IAAD,CAAMA,UAAU,YAAYkB,GAAG,WAA/B,6BAIH,cAAC,IAAD,OAfI","file":"static/js/4.991c3f51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2Tf1O\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from 'react';\r\nimport { Link, Outlet, useParams } from 'react-router-dom';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\nconst QuoteDetail = () => {\r\n   const params = useParams();\r\n   const { quoteId } = params;\r\n\r\n   const {\r\n      sendRequest,\r\n      status,\r\n      data: loadedQuote,\r\n      error,\r\n   } = useHttp(getSingleQuote, true);\r\n\r\n   useEffect(() => {\r\n      sendRequest(quoteId);\r\n   }, [sendRequest, quoteId]);\r\n\r\n   // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n   if (status === 'pending') {\r\n      return (\r\n         <div className=\"centered\">\r\n            <LoadingSpinner />\r\n         </div>\r\n      );\r\n   }\r\n\r\n   if (error) {\r\n      return <p className=\"centered focused\">{error}</p>;\r\n   }\r\n\r\n   if (!loadedQuote.text) {\r\n      return <p>No quote found!</p>;\r\n   }\r\n\r\n   return (\r\n      <Fragment>\r\n         <HighlightedQuote\r\n            quote={loadedQuote.id}\r\n            text={loadedQuote.text}\r\n            author={loadedQuote.author}\r\n         />\r\n         <div className=\"centered\">\r\n            <Link className=\"btn--flat\" to=\"comments\">\r\n               Load Comments\r\n            </Link>\r\n         </div>\r\n         <Outlet />\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}